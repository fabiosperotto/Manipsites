<?php

include_once 'ManipulationWebSite.php';
include_once '../SimpleHTMLDOM/simple_html_dom.php';

use SiteManipulation\ManipulationWebSite as ManipulationWebSite;
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-09-23 at 11:45:12.
 */
class ManipulationWebSiteTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var ManipulationWebSite
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new ManipulationWebSite('http://www.google.com');
        $this->assertInstanceOf('simple_html_dom',$this->object->objHtml,'Instancia de PHP Simple HTML Parser inexistente.');    
    }

    /**
     * @covers SiteManipulation\Library\ManipulationWebSite::getUrl     
     */
    public function testGetUrl()
    {
        $this->assertNotNull('urlToRetrieve');        
    }

    /**
     * @covers SiteManipulation\Library\ManipulationWebSite::setUrl
     */
    public function testSetUrl()
    {
        $this->object->setUrl('http://www.google.com');
        $this->assertStringStartsWith('http://',$this->object->getUrl(),'A URL precisa ter o formato http://www.example.com ou iniciado por ftp');
    }

    /**
     * @covers SiteManipulation\Library\ManipulationWebSite::getProxyAddress
     */
    public function testExistsProxyAddress()
    {
        $this->assertObjectHasAttribute('proxyAddress',$this->object,'Atributo proxyAddress precisa existir na classe.');       
    }


    /**
     * @covers SiteManipulation\Library\ManipulationWebSite::setProxyPort
     */
    public function testSetProxyPort()
    {
        $this->object->setProxyPort(00);
        $this->assertInternalType('int',$this->object->getProxyPort(),'Valor numerico deve ser inserido para a porta do Proxy.');
    }

    /**
     * @covers SiteManipulation\Library\ManipulationWebSite::connect
     */
    public function testConnect()
    {
        $this->assertNotNull($this->object->getUrl(),'URL para conexao nao pode ser nulo');               
        
    }

}
